// <auto-generated />
using System;
using BlooDyWeb.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlooDyWeb.Migrations
{
    [DbContext(typeof(BlooDyContext))]
    [Migration("20240725220618_ModificationInstitutionSante_AllowIdVilleNull")]
    partial class ModificationInstitutionSante_AllowIdVilleNull
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BlooDyWeb.Models.Arrondissement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreeLe")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreePar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DepartementId")
                        .HasColumnType("int");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifieLe")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiePar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("departementId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("departementId");

                    b.ToTable("Arrondissements");
                });

            modelBuilder.Entity("BlooDyWeb.Models.Centre", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreeLe")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreePar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifieLe")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiePar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomCentre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PersonneResponsableId")
                        .HasColumnType("bigint");

                    b.Property<string>("TypeCentre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("VilleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Centres");
                });

            modelBuilder.Entity("BlooDyWeb.Models.Collecte", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CentreId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreeLe")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreePar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCollecte")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifieLe")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiePar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Organisateur")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CentreId");

                    b.ToTable("Collectes");
                });

            modelBuilder.Entity("BlooDyWeb.Models.Commentaire", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreeLe")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreePar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("DonateurId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifieLe")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiePar")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DonateurId");

                    b.ToTable("Commentaires");
                });

            modelBuilder.Entity("BlooDyWeb.Models.Departement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreeLe")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreePar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifieLe")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiePar")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departements");
                });

            modelBuilder.Entity("BlooDyWeb.Models.DistributionModule.Chauffeur", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("CentreId")
                        .HasColumnType("bigint");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreeLe")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreePar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("IdCentre")
                        .HasColumnType("bigint");

                    b.Property<long>("IdPersonne")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifieLe")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiePar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PersonneId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CentreId");

                    b.HasIndex("PersonneId");

                    b.ToTable("Chauffeurs");
                });

            modelBuilder.Entity("BlooDyWeb.Models.DistributionModule.Demande", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreeLe")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreePar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupeSanguin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("IdInstitutionSante")
                        .HasColumnType("bigint");

                    b.Property<long>("IdTypeComposante")
                        .HasColumnType("bigint");

                    b.Property<long?>("InstitutionSanteId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifieLe")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiePar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantite")
                        .HasColumnType("int");

                    b.Property<string>("Statut")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("TypeComposanteId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("InstitutionSanteId");

                    b.HasIndex("TypeComposanteId");

                    b.ToTable("Demandes");
                });

            modelBuilder.Entity("BlooDyWeb.Models.DistributionModule.Distribution", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("ContactDestinataireId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreeLe")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreePar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateDistribution")
                        .HasColumnType("datetime2");

                    b.Property<long>("IdContactDestinataire")
                        .HasColumnType("bigint");

                    b.Property<long>("IdDemande")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifieLe")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiePar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantite")
                        .HasColumnType("int");

                    b.Property<int>("Statut")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContactDestinataireId");

                    b.ToTable("Distributions");
                });

            modelBuilder.Entity("BlooDyWeb.Models.DistributionModule.Document", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CheminFichier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreeLe")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreePar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DistributionId")
                        .HasColumnType("bigint");

                    b.Property<long>("IdDistribution")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifieLe")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiePar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeDocument")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DistributionId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("BlooDyWeb.Models.DistributionModule.InstitutionSante", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Categorie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreeLe")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreePar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("IdVille")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifieLe")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiePar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Statut")
                        .HasColumnType("bit");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InstitutionsSante");
                });

            modelBuilder.Entity("BlooDyWeb.Models.DistributionModule.LogDistribution", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreeLe")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreePar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("IdDistribution")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifieLe")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiePar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LogDistribution");
                });

            modelBuilder.Entity("BlooDyWeb.Models.DistributionModule.Notification", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreeLe")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreePar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DestinataireId")
                        .HasColumnType("bigint");

                    b.Property<long>("IdDestinataire")
                        .HasColumnType("bigint");

                    b.Property<long>("IdDistribution")
                        .HasColumnType("bigint");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifieLe")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiePar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DestinataireId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("BlooDyWeb.Models.DistributionModule.Transport", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("ChauffeurId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreeLe")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreePar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DistributionId")
                        .HasColumnType("bigint");

                    b.Property<TimeOnly?>("HeureArrivee")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("HeureCheckTemperature")
                        .HasColumnType("time");

                    b.Property<TimeOnly?>("HeureDepart")
                        .IsRequired()
                        .HasColumnType("time");

                    b.Property<long>("IdChauffeur")
                        .HasColumnType("bigint");

                    b.Property<long>("IdDistribution")
                        .HasColumnType("bigint");

                    b.Property<string>("ModeTransport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifieLe")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiePar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroVehicule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Statut")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TemperatureTransport")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChauffeurId");

                    b.HasIndex("DistributionId");

                    b.ToTable("Transports");
                });

            modelBuilder.Entity("BlooDyWeb.Models.Don", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CollecteId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreeLe")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreePar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("DonateurId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifieLe")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiePar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TestePositifPourMaladie")
                        .HasColumnType("bit");

                    b.Property<int>("Volume")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CollecteId");

                    b.HasIndex("DonateurId");

                    b.ToTable("Dons");
                });

            modelBuilder.Entity("BlooDyWeb.Models.Donateur", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreeLe")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreePar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupeSanguin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifieLe")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiePar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PersonneDeContactId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PersonneId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PersonneDeContactId");

                    b.HasIndex("PersonneId");

                    b.ToTable("Donateurs");
                });

            modelBuilder.Entity("BlooDyWeb.Models.ExamenMedical", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreeLe")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreePar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("DonateurId")
                        .HasColumnType("bigint");

                    b.Property<bool>("EtatDeSante")
                        .HasColumnType("bit");

                    b.Property<decimal>("Hemoglobine")
                        .HasPrecision(4, 2)
                        .HasColumnType("decimal(4, 2)");

                    b.Property<DateTime?>("ModifieLe")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiePar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Poids")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5, 2)")
                        .HasAnnotation("MaxValue", 500.0)
                        .HasAnnotation("MinValue", 10.0);

                    b.Property<decimal>("Pouls")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5, 2)")
                        .HasAnnotation("MaxValue", 1000.0)
                        .HasAnnotation("MinValue", 10.0);

                    b.Property<int>("TensionArterielleDiastolique")
                        .HasColumnType("int");

                    b.Property<int>("TensionArterielleSystolique")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DonateurId");

                    b.ToTable("Dossiers");
                });

            modelBuilder.Entity("BlooDyWeb.Models.Personne", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Adresse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CIN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateNaissance")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NIF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Occupation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatutMatrimonial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Personnes");
                });

            modelBuilder.Entity("BlooDyWeb.Models.Stock.Composante", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreeLe")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreePar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("DonId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifieLe")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiePar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Statut")
                        .HasColumnType("bit");

                    b.Property<long>("TypeComposanteId")
                        .HasColumnType("bigint");

                    b.Property<int>("Volume")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DonId");

                    b.HasIndex("TypeComposanteId");

                    b.ToTable("Composantes");
                });

            modelBuilder.Entity("BlooDyWeb.Models.Stock.TypeComposante", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreeLe")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreePar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DureeVie")
                        .HasColumnType("int");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifieLe")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiePar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Temperature")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TypeComposantes");
                });

            modelBuilder.Entity("BlooDyWeb.Models.Ville", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int?>("ArrondissementId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreeLe")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreePar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifieLe")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiePar")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Villes");
                });

            modelBuilder.Entity("BlooDyWeb.Models.Arrondissement", b =>
                {
                    b.HasOne("BlooDyWeb.Models.Departement", "departement")
                        .WithMany()
                        .HasForeignKey("departementId");

                    b.Navigation("departement");
                });

            modelBuilder.Entity("BlooDyWeb.Models.Collecte", b =>
                {
                    b.HasOne("BlooDyWeb.Models.Centre", "Centre")
                        .WithMany()
                        .HasForeignKey("CentreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Centre");
                });

            modelBuilder.Entity("BlooDyWeb.Models.Commentaire", b =>
                {
                    b.HasOne("BlooDyWeb.Models.Donateur", "Donateur")
                        .WithMany()
                        .HasForeignKey("DonateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Donateur");
                });

            modelBuilder.Entity("BlooDyWeb.Models.DistributionModule.Chauffeur", b =>
                {
                    b.HasOne("BlooDyWeb.Models.Centre", "Centre")
                        .WithMany()
                        .HasForeignKey("CentreId");

                    b.HasOne("BlooDyWeb.Models.Personne", "Personne")
                        .WithMany()
                        .HasForeignKey("PersonneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Centre");

                    b.Navigation("Personne");
                });

            modelBuilder.Entity("BlooDyWeb.Models.DistributionModule.Demande", b =>
                {
                    b.HasOne("BlooDyWeb.Models.DistributionModule.InstitutionSante", "InstitutionSante")
                        .WithMany()
                        .HasForeignKey("InstitutionSanteId");

                    b.HasOne("BlooDyWeb.Models.Stock.TypeComposante", "TypeComposante")
                        .WithMany()
                        .HasForeignKey("TypeComposanteId");

                    b.Navigation("InstitutionSante");

                    b.Navigation("TypeComposante");
                });

            modelBuilder.Entity("BlooDyWeb.Models.DistributionModule.Distribution", b =>
                {
                    b.HasOne("BlooDyWeb.Models.Personne", "ContactDestinataire")
                        .WithMany()
                        .HasForeignKey("ContactDestinataireId");

                    b.Navigation("ContactDestinataire");
                });

            modelBuilder.Entity("BlooDyWeb.Models.DistributionModule.Document", b =>
                {
                    b.HasOne("BlooDyWeb.Models.DistributionModule.Distribution", "Distribution")
                        .WithMany()
                        .HasForeignKey("DistributionId");

                    b.Navigation("Distribution");
                });

            modelBuilder.Entity("BlooDyWeb.Models.DistributionModule.Notification", b =>
                {
                    b.HasOne("BlooDyWeb.Models.Personne", "Destinataire")
                        .WithMany()
                        .HasForeignKey("DestinataireId");

                    b.Navigation("Destinataire");
                });

            modelBuilder.Entity("BlooDyWeb.Models.DistributionModule.Transport", b =>
                {
                    b.HasOne("BlooDyWeb.Models.DistributionModule.Chauffeur", "Chauffeur")
                        .WithMany()
                        .HasForeignKey("ChauffeurId");

                    b.HasOne("BlooDyWeb.Models.DistributionModule.Distribution", "Distribution")
                        .WithMany()
                        .HasForeignKey("DistributionId");

                    b.Navigation("Chauffeur");

                    b.Navigation("Distribution");
                });

            modelBuilder.Entity("BlooDyWeb.Models.Don", b =>
                {
                    b.HasOne("BlooDyWeb.Models.Collecte", "Collecte")
                        .WithMany()
                        .HasForeignKey("CollecteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlooDyWeb.Models.Donateur", "donateur")
                        .WithMany()
                        .HasForeignKey("DonateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Collecte");

                    b.Navigation("donateur");
                });

            modelBuilder.Entity("BlooDyWeb.Models.Donateur", b =>
                {
                    b.HasOne("BlooDyWeb.Models.Personne", "PersonneDeContact")
                        .WithMany()
                        .HasForeignKey("PersonneDeContactId");

                    b.HasOne("BlooDyWeb.Models.Personne", "Personne")
                        .WithMany()
                        .HasForeignKey("PersonneId");

                    b.Navigation("Personne");

                    b.Navigation("PersonneDeContact");
                });

            modelBuilder.Entity("BlooDyWeb.Models.ExamenMedical", b =>
                {
                    b.HasOne("BlooDyWeb.Models.Donateur", "Donateur")
                        .WithMany()
                        .HasForeignKey("DonateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Donateur");
                });

            modelBuilder.Entity("BlooDyWeb.Models.Stock.Composante", b =>
                {
                    b.HasOne("BlooDyWeb.Models.Don", "Don")
                        .WithMany()
                        .HasForeignKey("DonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlooDyWeb.Models.Stock.TypeComposante", "TypeComposante")
                        .WithMany()
                        .HasForeignKey("TypeComposanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Don");

                    b.Navigation("TypeComposante");
                });
#pragma warning restore 612, 618
        }
    }
}
